{"version":3,"sources":["../test/integration/examples/sample18-lazy-relations/entity/Author.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,qCAAkF;AAClF,iCAA4B;AAG5B,IAAa,MAAM,GAAnB;CAoBC,CAAA;AAjBG;IADC,gCAAsB,EAAE;;kCACd;AAGX;IADC,gBAAM,EAAE;;oCACI;AAKb;IAHC,mBAAS,CAAC,IAAI,CAAC,EAAE,CAAC,WAAI,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE;IAC1C,gBAAgB;KACnB,CAAC;;qCACqB;AAXd,MAAM;IADlB,gBAAM,CAAC,QAAQ,CAAC;GACJ,MAAM,CAoBlB;AApBY,wBAAM","file":"Author.js","sourcesContent":["import { Column, Entity, Index, PrimaryGeneratedColumn, OneToMany } from \"typeorm\"\nimport {Post} from \"./Post\";\n\n@Entity(\"Author\")\nexport class Author {\n\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column()\n    name: string;\n\n    @OneToMany(type => Post, post => post.author, {\n        // cascade: true\n    })\n    posts: Promise<Post[]>;\n\n    // /**\n    //  * You can add this helper method.\n    //  */\n    // asPromise() {\n    //     return Promise.resolve(this);\n    // }\n\n}\n"]}