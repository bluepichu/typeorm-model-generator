{"version":3,"sources":["../test/integration/examples/sample2-one-to-one/entity/Post.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,qCAA8F;AAC9F,+CAA4C;AAC5C,iDAA8C;AAC9C,6CAA0C;AAC1C,uDAAoD;AACpD,2CAAwC;AACxC,iDAA8C;AAG9C,IAAa,IAAI,GAAjB;CA+DC,CAAA;AA5DG;IADC,gCAAsB,EAAE;;gCACd;AAGX;IADC,gBAAM,EAAE;;mCACK;AAGd;IADC,gBAAM,EAAE;;kCACI;AASb;IANC,kBAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,2BAAY,EAAE;QAC5B,iBAAiB;QACjB,QAAQ,EAAE,SAAS;KACtB,CAAC;IACD,oBAAU,EAAE;IACb,2BAA2B;;8BACjB,2BAAY;sCAAC;AAUvB;IANC,kBAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,yBAAW,EAAE,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE;QACnD,QAAQ,EAAE,SAAS;QACnB,gBAAgB;KACpB,CAAC;IACD,oBAAU,EAAE;IACb,2BAA2B;;8BAClB,yBAAW;qCAAC;AASrB;IALC,kBAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,qBAAS,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE;IAC9C,iBAAiB;KACpB,CAAC;IACD,oBAAU,EAAE;IACb,2BAA2B;;8BACpB,qBAAS;mCAAC;AASjB;IALC,kBAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,2BAAY,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE;QACvD,QAAQ,EAAE,SAAS;KACtB,CAAC;IACD,oBAAU,EAAE;IACb,2BAA2B;;;sCACG;AAS9B;IANC,kBAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,iCAAe,EAAE,WAAW,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,EAAE;QAChE,iBAAiB;QAChB,QAAQ,EAAE,SAAS;KACvB,CAAC;IACD,oBAAU,EAAE;IACb,2BAA2B;;8BACd,iCAAe;yCAAC;AAM7B;IAHC,kBAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,uBAAU,EAAE,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;IACnD,oBAAU,EAAE;IACb,2BAA2B;;8BACnB,uBAAU;oCAAC;AA7DV,IAAI;IADhB,gBAAM,CAAC,MAAM,CAAC;GACF,IAAI,CA+DhB;AA/DY,oBAAI","file":"Post.js","sourcesContent":["import { PrimaryGeneratedColumn, Column, Entity, OneToOne, JoinColumn, Index } from \"typeorm\";\nimport { PostDetails } from \"./PostDetails\";\nimport { PostCategory } from \"./PostCategory\";\nimport { PostAuthor } from \"./PostAuthor\";\nimport { PostInformation } from \"./PostInformation\";\nimport { PostImage } from \"./PostImage\";\nimport { PostMetadata } from \"./PostMetadata\";\n\n@Entity(\"Post\")\nexport class Post {\n\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column()\n    title: string;\n\n    @Column()\n    text: string;\n\n    // post has relation with category, however inverse relation is not set (category does not have relation with post set)\n    @OneToOne(type => PostCategory, {\n        // cascade: true,\n        onDelete: 'CASCADE'\n    })\n    @JoinColumn()\n    // @Index({ unique: true })\n    category: PostCategory;\n\n    // post has relation with details. cascade inserts here means if new PostDetails instance will be set to this\n    // relation it will be inserted automatically to the db when you save this Post entity\n    @OneToOne(type => PostDetails, details => details.post, {\n         onDelete: 'CASCADE'\n         // cascade: true\n    })\n    @JoinColumn()\n    // @Index({ unique: true })\n    details: PostDetails;\n\n    // post has relation with details. cascade update here means if new PostDetail instance will be set to this relation\n    // it will be inserted automatically to the db when you save this Post entity\n    @OneToOne(type => PostImage, image => image.post, {\n        // cascade: true,\n    })\n    @JoinColumn()\n    // @Index({ unique: true })\n    image: PostImage;\n\n    // post has relation with details. cascade update here means if new PostDetail instance will be set to this relation\n    // it will be inserted automatically to the db when you save this Post entity\n    @OneToOne(type => PostMetadata, metadata => metadata.post, {\n        onDelete: 'CASCADE'\n    })\n    @JoinColumn()\n    // @Index({ unique: true })\n    metadata: PostMetadata | null;\n\n    // post has relation with details. full cascades here\n    @OneToOne(type => PostInformation, information => information.post, {\n        // cascade: true,\n         onDelete: 'CASCADE'\n    })\n    @JoinColumn()\n    // @Index({ unique: true })\n    information: PostInformation;\n\n    // post has relation with details. not cascades here. means cannot be persisted, updated or removed\n    @OneToOne(type => PostAuthor, author => author.post)\n    @JoinColumn()\n    // @Index({ unique: true })\n    author: PostAuthor;\n\n}\n"]}