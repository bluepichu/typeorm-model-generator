{"version":3,"sources":["../test/integration/examples/sample4_2-many-to-many_composite_keys/entity/Post.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,qCAA2H;AAC3H,6CAAwC;AAGxC,IAAa,IAAI,GAAjB;CAaC,CAAA;AAVG;IADC,uBAAa,CAAC,KAAK,CAAC;;gCACV;AAGX;IADC,uBAAa,EAAE;;kCACH;AAKb;IAFC,oBAAU,CAAC,IAAI,CAAC,EAAE,CAAC,uBAAU,EAAE,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;IACtD,mBAAS,EAAE;;yCACc;AAXjB,IAAI;IADhB,gBAAM,CAAC,MAAM,CAAC;GACF,IAAI,CAahB;AAbY,oBAAI","file":"Post.js","sourcesContent":["import { PrimaryColumn, Column, Entity, OneToOne, OneToMany, ManyToOne, ManyToMany, JoinColumn, JoinTable } from \"typeorm\";\nimport {PostAuthor} from \"./PostAuthor\";\n\n@Entity(\"Post\")\nexport class Post {\n\n    @PrimaryColumn(\"int\")\n    id: number;\n\n    @PrimaryColumn()\n    type: string;\n\n    // post has relation with details. not cascades here. means cannot be persisted, updated or removed\n    @ManyToMany(type => PostAuthor, author => author.posts)\n    @JoinTable()\n    postAuthors: PostAuthor[];\n\n}\n"]}