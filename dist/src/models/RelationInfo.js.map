{"version":3,"sources":["../src/models/RelationInfo.ts"],"names":[],"mappings":";;AAAA;IAAA;QASI,oBAAe,GAAY,KAAK,CAAC;IAerC,CAAC;IAZG,IAAI,WAAW;QACX,OAAO,IAAI,CAAC,YAAY,IAAI,WAAW,CAAC;IAC5C,CAAC;IACD,IAAI,YAAY;QACZ,OAAO,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC;IAC7C,CAAC;IACD,IAAI,UAAU;QACV,OAAO,IAAI,CAAC,YAAY,IAAI,UAAU,CAAC;IAC3C,CAAC;IACD,IAAI,WAAW;QACX,OAAO,IAAI,CAAC,YAAY,IAAI,WAAW,CAAC;IAC5C,CAAC;CACJ;AAxBD,oCAwBC","file":"RelationInfo.js","sourcesContent":["export class RelationInfo {\n    isOwner: boolean;\n    relationType: \"OneToOne\" | \"OneToMany\" | \"ManyToOne\" | \"ManyToMany\";\n    relatedTable: string;\n    relatedColumn: string;\n    ownerTable: string;\n    ownerColumn: string;\n    actionOnDelete: \"RESTRICT\" | \"CASCADE\" | \"SET NULL\" | null;\n    actionOnUpdate: \"RESTRICT\" | \"CASCADE\" | \"SET NULL\" | null;\n    relationIdField: boolean = false;\n    joinInfo?: { joinTable: string, joinColumns: string[], inverseJoinColumns: string[] };\n\n    get isOneToMany(): boolean {\n        return this.relationType == \"OneToMany\";\n    }\n    get isManyToMany(): boolean {\n        return this.relationType == \"ManyToMany\";\n    }\n    get isOneToOne(): boolean {\n        return this.relationType == \"OneToOne\";\n    }\n    get isManyToOne(): boolean {\n        return this.relationType == \"ManyToOne\";\n    }\n}\n"]}